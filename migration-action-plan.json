{
  "migrationPlan": {
    "strategy": "Create New Blazor WebAssembly Project",
    "reason": "Starting fresh is faster, cleaner, and less error-prone than in-place conversion",
    "estimatedTime": "4-6 hours",
    "phases": [
      {
        "phase": 1,
        "name": "Create New WASM Project",
        "estimatedTime": "30 minutes",
        "steps": [
          {
            "id": "1.1",
            "action": "Create new Blazor WebAssembly project",
            "details": [
              "Right-click solution in Visual Studio",
              "Add > New Project",
              "Select 'Blazor WebAssembly App' template",
              "Name: PortfolioClient.Wasm",
              "Target: .NET 9.0",
              "Authentication: None (will add MSAL manually)",
              "Uncheck 'ASP.NET Core Hosted' (API is separate)",
              "Click Create"
            ],
            "verification": "New project appears in solution with correct structure"
          },
          {
            "id": "1.2",
            "action": "Verify project structure created",
            "expectedStructure": {
              "folders": [
                "PortfolioClient.Wasm/",
                "├── wwwroot/",
                "├── Components/",
                "│   ├── Pages/",
                "│   ├── Layout/",
                "│   └── _Imports.razor",
                "├── App.razor",
                "├── Program.cs",
                "└── PortfolioClient.Wasm.csproj"
              ]
            },
            "verification": "All folders and base files exist"
          }
        ]
      },
      {
        "phase": 2,
        "name": "Copy Static Assets",
        "estimatedTime": "15 minutes",
        "steps": [
          {
            "id": "2.1",
            "action": "Copy wwwroot folder contents",
            "sourceDestinationMap": [
              {
                "source": "PortfolioClient/wwwroot/css/custom.css",
                "destination": "PortfolioClient.Wasm/wwwroot/css/custom.css",
                "note": "Contains CSS variables and custom styling"
              },
              {
                "source": "PortfolioClient/wwwroot/css/portfolio.css",
                "destination": "PortfolioClient.Wasm/wwwroot/css/portfolio.css",
                "note": "Main portfolio styles with animations"
              },
              {
                "source": "PortfolioClient/wwwroot/app.css",
                "destination": "PortfolioClient.Wasm/wwwroot/app.css",
                "note": "Base Blazor styles"
              },
              {
                "source": "PortfolioClient/wwwroot/images/",
                "destination": "PortfolioClient.Wasm/wwwroot/images/",
                "note": "Copy entire images folder including DeanM.jfif"
              },
              {
                "source": "PortfolioClient/wwwroot/portfolio.js",
                "destination": "PortfolioClient.Wasm/wwwroot/portfolio.js",
                "note": "JavaScript for animations (initPortfolio, scrollToTop)"
              },
              {
                "source": "PortfolioClient/wwwroot/favicon.png",
                "destination": "PortfolioClient.Wasm/wwwroot/favicon.png",
                "note": "Site favicon"
              }
            ],
            "verification": "All CSS files, images, and JS files copied successfully"
          },
          {
            "id": "2.2",
            "action": "Verify Bootstrap files exist",
            "details": [
              "Check if wwwroot/lib/bootstrap/ folder exists",
              "If missing, restore via LibMan or copy from old project",
              "Verify bootstrap.min.css is present"
            ],
            "verification": "Bootstrap CSS loads without 404 errors"
          }
        ]
      },
      {
        "phase": 3,
        "name": "Migrate Razor Components",
        "estimatedTime": "1 hour",
        "steps": [
          {
            "id": "3.1",
            "action": "Copy Home.razor",
            "source": "PortfolioClient/Components/Pages/Home.razor",
            "destination": "PortfolioClient.Wasm/Components/Pages/Home.razor",
            "modifications": [
              {
                "line": 2,
                "change": "Remove @rendermode InteractiveServer",
                "before": "@rendermode InteractiveServer",
                "after": "// Line removed - WASM doesn't need render mode directive"
              }
            ],
            "keepsIntact": [
              "All JSInterop calls (initPortfolio, scrollToTop)",
              "Section navigation logic (GoHome, GoProjects, GoContact)",
              "Inline JavaScript for text animation",
              "Particle effects divs",
              "Navigation structure"
            ],
            "verification": "Component compiles without errors"
          },
          {
            "id": "3.2",
            "action": "Copy ProjectsSection.razor",
            "source": "PortfolioClient/Components/ProjectsSection.razor",
            "destination": "PortfolioClient.Wasm/Components/ProjectsSection.razor",
            "modifications": [],
            "note": "Already WASM-compatible, copy as-is",
            "keepsIntact": [
              "HttpClient injection and usage",
              "API call to /api/projects",
              "Fallback projects logic",
              "All project rendering logic",
              "Loading and error states"
            ],
            "verification": "Component compiles and displays fallback projects"
          },
          {
            "id": "3.3",
            "action": "Copy ContactSection.razor",
            "source": "PortfolioClient/Components/ContactSection.razor",
            "destination": "PortfolioClient.Wasm/Components/ContactSection.razor",
            "modifications": [],
            "note": "Static component, copy as-is",
            "keepsIntact": [
              "Profile image reference (images/DeanM.jfif)",
              "Email link",
              "LinkedIn link",
              "GitHub link",
              "All styling and layout"
            ],
            "verification": "Component displays with image and all links"
          },
          {
            "id": "3.4",
            "action": "Copy MainLayout.razor",
            "source": "PortfolioClient/Components/Layout/MainLayout.razor",
            "destination": "PortfolioClient.Wasm/Components/Layout/MainLayout.razor",
            "modifications": [],
            "note": "Minimal layout, copy as-is",
            "content": "@inherits LayoutComponentBase\n\n@Body",
            "verification": "Layout renders correctly"
          },
          {
            "id": "3.5",
            "action": "Copy MainLayout.razor.css if needed",
            "source": "PortfolioClient/Components/Layout/MainLayout.razor.css",
            "destination": "PortfolioClient.Wasm/Components/Layout/MainLayout.razor.css",
            "note": "Optional - only if using scoped styles",
            "verification": "CSS isolation works if copied"
          }
        ]
      },
      {
        "phase": 4,
        "name": "Configure Project References and Packages",
        "estimatedTime": "15 minutes",
        "steps": [
          {
            "id": "4.1",
            "action": "Update PortfolioClient.Wasm.csproj",
            "file": "PortfolioClient.Wasm/PortfolioClient.Wasm.csproj",
            "requiredChanges": [
              {
                "section": "PropertyGroup",
                "add": [
                  "<TargetFramework>net9.0</TargetFramework>",
                  "<Nullable>enable</Nullable>",
                  "<ImplicitUsings>enable</ImplicitUsings>",
                  "<UserSecretsId>e2eee2bf-bba5-4b49-bd2d-94718e5fdde0</UserSecretsId>"
                ],
                "note": "Maintain same settings as original project"
              }
            ],
            "verification": "Project compiles with correct framework"
          },
          {
            "id": "4.2",
            "action": "Add NuGet package references",
            "file": "PortfolioClient.Wasm/PortfolioClient.Wasm.csproj",
            "packages": [
              {
                "name": "Microsoft.AspNetCore.Components.WebAssembly",
                "version": "9.0.6",
                "required": true,
                "reason": "Core WASM functionality"
              },
              {
                "name": "Microsoft.AspNetCore.Components.WebAssembly.DevServer",
                "version": "9.0.6",
                "required": true,
                "privateAssets": "all",
                "reason": "Development server"
              },
              {
                "name": "Microsoft.Authentication.WebAssembly.Msal",
                "version": "9.0.6",
                "required": true,
                "reason": "Azure AD authentication"
              },
              {
                "name": "GraphQL.Client",
                "version": "6.1.0",
                "required": false,
                "reason": "Keep if using GraphQL (currently not used in components)"
              },
              {
                "name": "GraphQL.Client.Serializer.Newtonsoft",
                "version": "6.1.0",
                "required": false,
                "reason": "Keep if using GraphQL"
              },
              {
                "name": "Microsoft.AspNetCore.SignalR.Client",
                "version": "9.0.6",
                "required": false,
                "reason": "Keep if using SignalR (WASM-compatible)"
              }
            ],
            "verification": "All packages restore successfully"
          },
          {
            "id": "4.3",
            "action": "Add PortfolioShared project reference",
            "file": "PortfolioClient.Wasm/PortfolioClient.Wasm.csproj",
            "xml": "<ItemGroup>\n  <ProjectReference Include=\"..\\PortfolioShared\\PortfolioShared.csproj\" />\n</ItemGroup>",
            "verification": "Project builds with PortfolioShared models available"
          }
        ]
      },
      {
        "phase": 5,
        "name": "Configure MSAL Authentication",
        "estimatedTime": "1 hour",
        "steps": [
          {
            "id": "5.1",
            "action": "Create appsettings.json",
            "file": "PortfolioClient.Wasm/wwwroot/appsettings.json",
            "content": {
              "AzureAd": {
                "Authority": "https://login.microsoftonline.com/917f9213-2bac-4a41-ba47-8026b0e2adea",
                "ClientId": "e5b9d857-5798-4a28-88af-22f9615f1f86",
                "ValidateAuthority": true
              },
              "PortfolioApi": {
                "BaseUrl": "https://portfoliodashboardapi-b4bfeje0cwdeenh8.centralus-01.azurewebsites.net/",
                "Scopes": [
                  "api://e5b9d857-5798-4a28-88af-22f9615f1f86/access_as_user"
                ]
              }
            },
            "note": "Client secret NOT needed for WASM (public client)",
            "verification": "File created in wwwroot folder"
          },
          {
            "id": "5.2",
            "action": "Create appsettings.Development.json",
            "file": "PortfolioClient.Wasm/wwwroot/appsettings.Development.json",
            "content": {
              "AzureAd": {
                "Authority": "https://login.microsoftonline.com/917f9213-2bac-4a41-ba47-8026b0e2adea",
                "ClientId": "e5b9d857-5798-4a28-88af-22f9615f1f86",
                "ValidateAuthority": true
              },
              "PortfolioApi": {
                "BaseUrl": "https://localhost:5000/",
                "Scopes": [
                  "api://e5b9d857-5798-4a28-88af-22f9615f1f86/access_as_user"
                ]
              }
            },
            "note": "Use localhost API for development",
            "verification": "Development settings override production"
          },
          {
            "id": "5.3",
            "action": "Update Program.cs for WASM + MSAL",
            "file": "PortfolioClient.Wasm/Program.cs",
            "completeReplacement": true,
            "newContent": "See Phase 5 Step 5.3 in previous response",
            "keyChanges": [
              "Use WebAssemblyHostBuilder instead of WebApplicationBuilder",
              "Add MSAL authentication with AddMsalAuthentication",
              "Configure HttpClient with AuthorizationMessageHandler",
              "Bind AzureAd configuration from appsettings.json",
              "Add default access token scopes",
              "Remove all server-side middleware"
            ],
            "verification": "Project builds and runs"
          }
        ]
      },
      {
        "phase": 6,
        "name": "Update App.razor and Create Auth Components",
        "estimatedTime": "45 minutes",
        "steps": [
          {
            "id": "6.1",
            "action": "Update App.razor",
            "file": "PortfolioClient.Wasm/Components/App.razor",
            "modifications": [
              {
                "line": "top",
                "add": "@using Microsoft.AspNetCore.Components.WebAssembly.Authentication"
              },
              {
                "location": "script tag",
                "change": "blazor.web.js to blazor.webassembly.js",
                "before": "<script src=\"_framework/blazor.web.js\"></script>",
                "after": "<script src=\"_framework/blazor.webassembly.js\"></script>"
              },
              {
                "location": "NotAuthorized section",
                "replace": "Sign In link with RedirectToLogin component",
                "before": "<a href=\"/signin-oidc\" class=\"btn btn-primary\">Sign In</a>",
                "after": "<RedirectToLogin />"
              },
              {
                "location": "head section",
                "remove": "@Assets[] syntax",
                "change": "Use direct paths instead of Assets helper",
                "before": "@Assets[\"app.css\"]",
                "after": "app.css"
              }
            ],
            "verification": "App.razor compiles and routes work"
          },
          {
            "id": "6.2",
            "action": "Create Authentication.razor",
            "file": "PortfolioClient.Wasm/Components/Pages/Authentication.razor",
            "content": "@page \"/authentication/{action}\"\n@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\n\n<RemoteAuthenticatorView Action=\"@Action\">\n    <LoggingIn>\n        <div class=\"auth-container\">\n            <h3>Logging in...</h3>\n            <p>Please wait while we sign you in.</p>\n        </div>\n    </LoggingIn>\n    <LogOut>\n        <div class=\"auth-container\">\n            <h3>Logging out...</h3>\n            <p>Please wait while we sign you out.</p>\n        </div>\n    </LogOut>\n    <CompletingLoggingIn>\n        <div class=\"auth-container\">\n            <h3>Completing login...</h3>\n            <p>Finalizing authentication.</p>\n        </div>\n    </CompletingLoggingIn>\n    <CompletingLogOut>\n        <div class=\"auth-container\">\n            <h3>Completing logout...</h3>\n            <p>Finalizing logout.</p>\n        </div>\n    </CompletingLogOut>\n    <LogInFailed>\n        <div class=\"auth-container\">\n            <h3>Login failed</h3>\n            <p>There was an error signing you in. Please try again.</p>\n            <a href=\"/\">Return to home</a>\n        </div>\n    </LogInFailed>\n</RemoteAuthenticatorView>\n\n@code {\n    [Parameter]\n    public string? Action { get; set; }\n}",
            "verification": "Authentication page handles MSAL callbacks"
          },
          {
            "id": "6.3",
            "action": "Create RedirectToLogin.razor",
            "file": "PortfolioClient.Wasm/Components/RedirectToLogin.razor",
            "content": "@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\n@inject NavigationManager Navigation\n@code {\n    protected override void OnInitialized()\n    {\n        Navigation.NavigateToLogin(\"authentication/login\");\n    }\n}",
            "verification": "Unauthenticated users redirect to login"
          }
        ]
      },
      {
        "phase": 7,
        "name": "Update _Imports.razor",
        "estimatedTime": "10 minutes",
        "steps": [
          {
            "id": "7.1",
            "action": "Update _Imports.razor",
            "file": "PortfolioClient.Wasm/Components/_Imports.razor",
            "content": "@using System.Net.Http\n@using System.Net.Http.Json\n@using Microsoft.AspNetCore.Components.Forms\n@using Microsoft.AspNetCore.Components.Routing\n@using Microsoft.AspNetCore.Components.Web\n@using Microsoft.AspNetCore.Components.Web.Virtualization\n@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\n@using Microsoft.AspNetCore.Components.Authorization\n@using Microsoft.JSInterop\n@using PortfolioClient.Wasm\n@using PortfolioClient.Wasm.Components",
            "note": "Update namespace from PortfolioClient to PortfolioClient.Wasm",
            "verification": "All components resolve correctly"
          }
        ]
      },
      {
        "phase": 8,
        "name": "Update Azure AD App Registration",
        "estimatedTime": "30 minutes",
        "platform": "Azure Portal",
        "steps": [
          {
            "id": "8.1",
            "action": "Add SPA redirect URIs",
            "location": "Azure Portal > Azure AD > App Registrations > e5b9d857-5798-4a28-88af-22f9615f1f86 > Authentication",
            "tasks": [
              "Click 'Add a platform'",
              "Select 'Single-page application'",
              "Add redirect URI: https://localhost:7182/authentication/login-callback",
              "Add redirect URI: https://yourdomain.com/authentication/login-callback (for production)",
              "Add logout URI: https://localhost:7182/authentication/logout-callback",
              "Add logout URI: https://yourdomain.com/authentication/logout-callback"
            ],
            "verification": "SPA platform configured with redirect URIs"
          },
          {
            "id": "8.2",
            "action": "Enable implicit grant tokens",
            "location": "Same Authentication page",
            "tasks": [
              "Under 'Implicit grant and hybrid flows'",
              "Check 'ID tokens'",
              "Check 'Access tokens'",
              "Click Save"
            ],
            "verification": "Tokens enabled for SPA flow"
          },
          {
            "id": "8.3",
            "action": "Verify API permissions",
            "location": "Azure AD > App Registrations > API permissions",
            "requiredPermissions": [
              "openid (delegated)",
              "profile (delegated)",
              "email (delegated)",
              "User.Read (Microsoft Graph)"
            ],
            "verification": "All permissions granted with admin consent"
          },
          {
            "id": "8.4",
            "action": "Create API scope (if not exists)",
            "location": "Azure AD > App Registrations > Expose an API",
            "tasks": [
              "Click 'Add a scope'",
              "Scope name: access_as_user",
              "Admin consent display name: Access API as user",
              "Admin consent description: Allows the app to access the API on behalf of the user",
              "State: Enabled",
              "Click 'Add scope'"
            ],
            "verification": "Scope api://e5b9d857-5798-4a28-88af-22f9615f1f86/access_as_user exists"
          }
        ]
      },
      {
        "phase": 9,
        "name": "Update API CORS Configuration",
        "estimatedTime": "15 minutes",
        "steps": [
          {
            "id": "9.1",
            "action": "Update CORS in PortfolioAPI",
            "file": "PortfolioAPI/Program.cs",
            "modification": {
              "location": "AddCors section",
              "currentCode": "builder.WithOrigins(\"https://localhost:7182\")",
              "newCode": "builder.WithOrigins(\"https://localhost:7182\", \"https://yourdomain.com\")\n       .AllowCredentials()\n       .AllowAnyMethod()\n       .AllowAnyHeader()",
              "reason": "Allow WASM app to call API with credentials"
            },
            "verification": "API accepts requests from WASM app"
          },
          {
            "id": "9.2",
            "action": "Verify JWT Bearer configuration",
            "file": "PortfolioAPI/Program.cs",
            "checkExists": [
              "AddAuthentication(JwtBearerDefaults.AuthenticationScheme)",
              "Authority matches Azure AD tenant",
              "Audience matches ClientId"
            ],
            "note": "Should already be configured from original project",
            "verification": "API validates tokens from MSAL"
          }
        ]
      },
      {
        "phase": 10,
        "name": "Create wwwroot/portfolio.js (if missing)",
        "estimatedTime": "10 minutes",
        "steps": [
          {
            "id": "10.1",
            "action": "Verify or create portfolio.js",
            "file": "PortfolioClient.Wasm/wwwroot/portfolio.js",
            "requiredFunctions": [
              {
                "name": "initPortfolio",
                "purpose": "Animated text rotation for tagline",
                "note": "Called from Home.razor OnAfterRenderAsync"
              },
              {
                "name": "scrollToTop",
                "purpose": "Scroll to top on section navigation",
                "implementation": "window.scrollTo({ top: 0, behavior: 'smooth' })"
              }
            ],
            "content": "window.initPortfolio = function() {\n    setTimeout(function() {\n        var elem = document.getElementById('animatedText');\n        if (elem) {\n            var texts = ['digital experiences', 'web applications', 'user interfaces', 'scalable solutions'];\n            var idx = 0;\n            elem.style.transition = 'opacity 0.3s ease';\n            setInterval(function() {\n                idx = (idx + 1) % texts.length;\n                elem.style.opacity = '0';\n                setTimeout(function() {\n                    elem.textContent = texts[idx];\n                    elem.style.opacity = '1';\n                }, 300);\n            }, 3000);\n        }\n    }, 500);\n};\n\nwindow.scrollToTop = function() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n};",
            "verification": "Text animation and scroll work"
          }
        ]
      },
      {
        "phase": 11,
        "name": "Testing and Validation",
        "estimatedTime": "2 hours",
        "steps": [
          {
            "id": "11.1",
            "action": "Test local build",
            "tasks": [
              "Build PortfolioClient.Wasm project",
              "Resolve any compilation errors",
              "Check for missing references",
              "Verify all Razor components compile"
            ],
            "verification": "Clean build with 0 errors"
          },
          {
            "id": "11.2",
            "action": "Test local run",
            "tasks": [
              "Set PortfolioClient.Wasm as startup project",
              "Run application (F5)",
              "Verify home page loads",
              "Check browser console for errors",
              "Verify CSS loads correctly",
              "Test JavaScript animations"
            ],
            "verification": "App loads at https://localhost:7182"
          },
          {
            "id": "11.3",
            "action": "Test authentication flow",
            "tasks": [
              "Navigate to home page",
              "Click login or access protected resource",
              "Verify redirect to Azure AD",
              "Complete login",
              "Verify redirect back to app",
              "Check for access token in session storage",
              "Test logout"
            ],
            "verification": "Full auth flow works end-to-end"
          },
          {
            "id": "11.4",
            "action": "Test API integration",
            "tasks": [
              "Start PortfolioAPI",
              "Navigate to Projects section",
              "Verify API call in Network tab",
              "Check Authorization header present",
              "Verify projects load from API",
              "Test fallback if API fails"
            ],
            "verification": "API calls succeed with bearer token"
          },
          {
            "id": "11.5",
            "action": "Test all navigation and features",
            "tasks": [
              "Test Home, Projects, Contact navigation",
              "Verify animations work",
              "Test section switching",
              "Verify images load",
              "Test all external links",
              "Check responsive design on mobile"
            ],
            "verification": "All features work as expected"
          }
        ]
      },
      {
        "phase": 12,
        "name": "Decommission Old Project",
        "estimatedTime": "15 minutes",
        "steps": [
          {
            "id": "12.1",
            "action": "Verify new project is fully functional",
            "checklist": [
              "Authentication works",
              "API calls succeed",
              "All pages render correctly",
              "JavaScript functions work",
              "CSS loads properly",
              "No console errors"
            ],
            "verification": "Complete feature parity achieved"
          },
          {
            "id": "12.2",
            "action": "Remove old PortfolioClient project",
            "tasks": [
              "Right-click PortfolioClient in Solution Explorer",
              "Select 'Remove' (not Delete)",
              "Confirm removal"
            ],
            "note": "Project files remain on disk for backup",
            "verification": "Only PortfolioClient.Wasm in solution"
          },
          {
            "id": "12.3",
            "action": "Optional: Rename new project",
            "tasks": [
              "Right-click PortfolioClient.Wasm",
              "Rename to PortfolioClient",
              "Update namespace in all files",
              "Update assembly name in .csproj"
            ],
            "note": "Optional step for cleaner naming",
            "verification": "Project renamed successfully"
          },
          {
            "id": "12.4",
            "action": "Update solution configuration",
            "tasks": [
              "Set PortfolioClient.Wasm as startup project",
              "Configure multiple startup projects (API + Client)",
              "Update any solution-level settings"
            ],
            "verification": "Solution configured correctly"
          }
        ]
      }
    ]
  },
  "filesNotToCopy": [
    {
      "file": "PortfolioClient/CustomAuthStateProvider.cs",
      "reason": "MSAL provides built-in authentication state provider"
    },
    {
      "file": "PortfolioClient/Program.cs",
      "reason": "Completely different for WASM - write new"
    },
    {
      "file": "PortfolioClient/Components/Routes.razor",
      "reason": "Not needed - routing handled in App.razor"
    },
    {
      "file": "PortfolioClient/Properties/launchSettings.json",
      "reason": "New project generates its own"
    }
  ],
  "criticalVerificationPoints": [
    {
      "checkpoint": "After Phase 5",
      "verify": "MSAL authentication configured correctly in Program.cs"
    },
    {
      "checkpoint": "After Phase 8",
      "verify": "Azure AD app registration has SPA platform with redirect URIs"
    },
    {
      "checkpoint": "After Phase 11.3",
      "verify": "Can login and receive access token"
    },
    {
      "checkpoint": "After Phase 11.4",
      "verify": "API calls include bearer token in Authorization header"
    }
  ],
  "potentialIssues": [
    {
      "issue": "Assets helper not available in WASM",
      "solution": "Use direct paths in App.razor instead of @Assets[\"file.css\"]",
      "example": "Change @Assets[\"app.css\"] to app.css"
    },
    {
      "issue": "Namespace mismatches",
      "solution": "Update all namespaces from PortfolioClient to PortfolioClient.Wasm",
      "files": ["_Imports.razor", "Program.cs", "All component files"]
    },
    {
      "issue": "CORS errors calling API",
      "solution": "Ensure API CORS policy includes WASM app origin with AllowCredentials()"
    },
    {
      "issue": "Authentication redirect fails",
      "solution": "Verify redirect URIs in Azure AD exactly match callback paths"
    },
    {
      "issue": "Missing wwwroot files",
      "solution": "Ensure all static files copied, especially portfolio.js"
    }
  ],
  "successCriteria": {
    "functional": [
      "Application loads at https://localhost:7182",
      "Azure AD login works",
      "Access token obtained and stored",
      "API calls succeed with bearer token",
      "Projects load from API or fallback",
      "All navigation works (Home, Projects, Contact)",
      "JavaScript animations function",
      "Images display correctly",
      "No console errors"
    ],
    "technical": [
      "Project uses Microsoft.NET.Sdk.BlazorWebAssembly SDK",
      "MSAL authentication configured",
      "AuthorizationMessageHandler attaches tokens",
      "Azure AD app has SPA platform",
      "API validates JWT tokens",
      "CORS allows WASM origin"
    ]
  },
  "nextSteps": {
    "afterMigration": [
      "Deploy to Azure Static Web Apps",
      "Configure custom domain",
      "Update Azure AD redirect URIs for production",
      "Test production deployment",
      "Update README.md with new architecture"
    ]
  }
}